/*
 * This source file was generated by the Gradle 'init' task
 */
package io.github.alexritian.codegen;

import org.gradle.testkit.runner.GradleRunner;
import org.gradle.testkit.runner.TaskOutcome;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.io.TempDir;

import java.io.File;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

/**
 * A simple unit test for the 'org.example.greeting' plugin.
 */
class CodegenGradlePluginTest {

   @TempDir
   File testProjectDir;

    private File buildFile;

    @Test
    public void test() throws IOException {
        buildFile = new File(testProjectDir, "build.gradle");
        var build = """
                plugins {
                    id 'io.github.alexritian.codegenGradlePlugin'
                    id 'java'
                }
                
                repositories {
                    mavenLocal()
                    mavenCentral()
                }
                
                jooq {
                    configurations {
                        main{
                            database {
                                schema = 'dashboard'
                                includes = '.*'
                            }
                            output {
                                packageName = 'org.moonlit.codegen'
                            }
                            forcedTypes {
                                timestampToInstant()
                            }
                        }
                    }
                }
                
                dependencies {
                        jooqGenerator 'org.postgresql:postgresql:42.5.0'
                }
                
                tasks.named('generateJooq') {
                    dependsOn processResources
                }
                """;
        Files.write(buildFile.toPath(), build.getBytes(StandardCharsets.UTF_8));

        var migrateFiles = new File(testProjectDir, "src/main/resources/db/migration/V20241008_1621__init.sql");
        migrateFiles.getParentFile().mkdirs();
        var initSql = """
                CREATE TABLE major_events (
                	id serial4 NOT NULL,
                	start_date date NOT NULL,
                	end_date date NOT NULL,
                	title varchar NOT NULL,
                	"content" varchar NOT NULL,
                	"owner" varchar NOT NULL,
                	weight numeric(3,2) NULL,
                	status int2 NOT NULL,
                	created_at timestamptz NULL,
                	created_by varchar NULL,
                	updated_at timestamptz NULL,
                	updated_by varchar NULL,
                	CONSTRAINT major_events_pk PRIMARY KEY (id)
                );
                COMMENT ON TABLE major_events IS '大事件记录';
                
                -- Column comments
                
                COMMENT ON COLUMN major_events.start_date IS '事件开始日期';
                COMMENT ON COLUMN major_events.end_date IS '事件结束日期';
                COMMENT ON COLUMN major_events.title IS '事件标题';
                COMMENT ON COLUMN major_events."content" IS '事件支持目标/事件内容';
                COMMENT ON COLUMN major_events."owner" IS '负责人itcode';
                COMMENT ON COLUMN major_events.weight IS '权重';
                COMMENT ON COLUMN major_events.status IS '项目状态';
                """;

        Files.write(migrateFiles.toPath(), initSql.getBytes(StandardCharsets.UTF_8));
        GradleRunner.create().withProjectDir(testProjectDir).withPluginClasspath().withArguments("clean").build();

        var result = GradleRunner.create()
                .withProjectDir(testProjectDir)
                .withPluginClasspath()
                .withArguments("generateJooq", "--info")
                .withDebug(true)
                .build();

        // 断言任务成功
        assertEquals(TaskOutcome.SUCCESS, result.task(":generateJooq").getOutcome());

        File generatedDir = new File(testProjectDir, "build/generated/source/jooq");
        assertTrue(generatedDir.exists());
    }
}
