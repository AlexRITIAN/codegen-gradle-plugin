import com.vanniktech.maven.publish.SonatypeHost

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Gradle plugin project to get you started.
 * For more details on writing Custom Plugins, please refer to https://docs.gradle.org/8.10.1/userguide/custom_plugins.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
    `java-gradle-plugin`
    signing
    id("com.vanniktech.maven.publish") version "0.30.0"
}

group = "io.github.alexritian"
version = "1.0.0"

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven { url = uri("https://plugins.gradle.org/m2/") } // 添加 Gradle Plugin Portal
}

dependencies {

    implementation("nu.studer:gradle-jooq-plugin:9.0")
    implementation("org.testcontainers:postgresql:1.20.1")
    // flyway
    implementation("org.flywaydb:flyway-core:10.19.0")
    implementation("org.flywaydb:flyway-database-postgresql:10.19.0")
    implementation("org.postgresql:postgresql:42.7.4")
    // 测试依赖
    testImplementation(gradleTestKit())
    testImplementation("org.junit.jupiter:junit-jupiter:5.11.0")
}

gradlePlugin {
    // Define the plugin
    val codegenJooq by plugins.creating {
        id = "org.moonlit.jooq"
        implementationClass = "org.moonlit.codegen.CodegenJooqPlugin"
        displayName = "Codegen JOOQ Gradle Plugin"
        description = "A custom Gradle plugin that extends gradle-jooq-plugin with default configurations."
    }
}

tasks.test {
    useJUnitPlatform()
}

sourceSets {
    test {
        java {
            setSrcDirs(listOf("src/test/java"))
        }
    }
}

publishing {
    repositories {
        maven {
            name = "githubPackages"
            url = uri("https://maven.pkg.github.com/AlexRITIAN/codegen-gradle-plugin")
            credentials(PasswordCredentials::class)
        }
    }
}

mavenPublishing {
    publishToMavenCentral(SonatypeHost.CENTRAL_PORTAL)

    signAllPublications()

    coordinates(project.group.toString(), project.name, project.version.toString())
    pom {
        name.set("${project.group}:${project.name}")
        description.set("Use JOOQ to generate code")
        url.set("https://github.com/AlexRITIAN/codegen-gradle-plugin")

        licenses {
            license {
                name.set("The Apache License, Version 2.0")
                url.set("http://www.apache.org/licenses/LICENSE-2.0.txt")
            }
        }

        developers {
            developer {
                id.set("AlexRITIAN")
                name.set("Too_Young")
                email.set("yhritianfq@gmail.com")
            }
        }

        scm {
            url.set("https://github.com/AlexRITIAN/codegen-gradle-plugin")
            connection.set("scm:git:git://github.com/AlexRITIAN/codegen-gradle-plugin")
            developerConnection.set("scm:git:ssh://git@github.com:AlexRITIAN/codegen-gradle-plugin.git")
        }
    }
}